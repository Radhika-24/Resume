{"version":3,"sources":["webpack://resume-builder/./node_modules/@material-ui/core/esm/Link/Link.js","webpack://resume-builder/./node_modules/@material-ui/core/esm/Typography/Typography.js","webpack://resume-builder/./node_modules/@material-ui/core/esm/utils/capitalize.js","webpack://resume-builder/./node_modules/@material-ui/core/esm/utils/setRef.js","webpack://resume-builder/./node_modules/@material-ui/core/esm/utils/useForkRef.js","webpack://resume-builder/./node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js","webpack://resume-builder/./src/components/DownloadJsonLink.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/intl/index.js","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Basics.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Awards.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Education.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Interests.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Languages.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Publications.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/References.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Skills.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Volunteer.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Work.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Projects.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/CoverLetter.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Certificates.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Sections/Download.jsx","webpack://resume-builder/./src/components/ResumeTemplates/VanHack/Index.jsx","webpack://resume-builder/./src/components/hooks/useAntiPageBreakTitle.js"],"names":["Link","props","ref","classes","className","_props$color","color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","root","concat","button","event","underlineNone","textDecoration","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","borderStyle","name","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$display","display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","Component","theme","typography","caption","overline","srOnly","height","width","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","palette","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock","capitalize","string","Error","charAt","toUpperCase","slice","setRef","value","current","useForkRef","refA","refB","refValue","hadKeyboardEvent","hadFocusVisibleRecently","hadFocusVisibleRecentlyTimeout","inputTypesWhitelist","search","url","tel","email","password","number","date","month","week","time","datetime","handleKeyDown","metaKey","altKey","ctrlKey","handlePointerDown","handleVisibilityChange","this","visibilityState","node","type","tagName","target","matches","readOnly","isContentEditable","handleBlurVisible","window","clearTimeout","setTimeout","useIsFocusVisible","instance","doc","ownerDocument","addEventListener","useStyles","makeStyles","linkWrapper","children","json","href","useMemo","isClient","btoa","unescape","encodeURIComponent","JSON","stringify","classNames","download","locale","messages","globalEn","localEn","globalPtBr","localPtBr","globalEs","localEs","map","translation","createIntl","createIntlCache","resumeSummary","borderBottom","resumeBasics","pageBreakInside","textTransform","address","listStyle","content","detailsWrapper","marginLeft","summaryWrapper","image","float","basics","label","phone","summary","profiles","location","intl","useIntl","postalCode","city","countryCode","region","locationEnabled","Boolean","Fragment","src","alt","key","uuid","length","profile","profileUrl","network","username","title","formatMessage","id","resumeAwards","award","fontWeight","awards","contentWrapper","awardWrapper","positionDate","fontStyle","fontSize","firstItem","useRef","sectionTitle","titleStyle","useAntiPageBreakTitle","style","awarder","refProps","resumeEducation","institution","courses","coursesDetails","educationWrapper","education","educations","area","studyType","startDate","endDate","score","course","resumeInterests","interests","interest","keywords","flexWrap","paddingLeft","interestWrapper","keyword","resumeLanguages","languages","languageWrapper","lang","language","fluency","resumePublications","publications","publication","publicationWrapper","publisher","releaseDate","resumeReferences","references","reference","textIndent","referenceWrapper","resumeSkills","skills","skillTitle","skill","level","resumeVolunteer","volunteers","highlights","volunteerWrapper","volunteer","organization","highlight","resumeWork","works","urlAndLocation","description","workWrapper","workHeader","work","resumeProjects","projects","project","projectWrapper","roles","entity","clear","pageBreakAfter","breakAfter","minHeight","variable","pageBreakWarning","paddingTop","coverLetterText","coverLetterVariables","variables","newVariables","Object","entries","forEach","entry","renderToString","replaceAll","dangerouslySetInnerHTML","__html","Mustache","resumeCertificates","certificates","issuer","resumeDownload","jsonResume","a","msg","DownloadJsonLink","Date","now","resumeDefaultTemplate","marginBlockStart","marginBlockEnd","customTranslations","isPrinting","isOnlineViewer","coverLetter","enableSourceDataDownload","templateIntl","newIntl","templateIntls","tempIntl","defaultLocale","isObjectNotEmpty","RawIntlProvider","setTitleStyle","useState","useEffect","clientHeight"],"mappings":"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","file":"298-c926b4afe8ffa2f88c2c.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\"; // It should to be noted that this function isn't equivalent to `text-transform: capitalize`.\n//\n// A strict capitalization should uppercase the first letter of each word a the sentence.\n// We only handle the first word.\n\nexport default function capitalize(string) {\n  if (typeof string !== 'string') {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? \"Material-UI: capitalize(string) expects a string argument.\" : _formatMuiErrorMessage(7));\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}","// TODO v5: consider to make it private\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","import * as React from 'react';\nimport setRef from './setRef';\nexport default function useForkRef(refA, refB) {\n  /**\n   * This will create a new function if the ref props change and are defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior\n   */\n  return React.useMemo(function () {\n    if (refA == null && refB == null) {\n      return null;\n    }\n\n    return function (refValue) {\n      setRef(refA, refValue);\n      setRef(refB, refValue);\n    };\n  }, [refA, refB]);\n}","// based on https://github.com/WICG/focus-visible/blob/v4.1.5/src/focus-visible.js\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nvar hadKeyboardEvent = true;\nvar hadFocusVisibleRecently = false;\nvar hadFocusVisibleRecentlyTimeout = null;\nvar inputTypesWhitelist = {\n  text: true,\n  search: true,\n  url: true,\n  tel: true,\n  email: true,\n  password: true,\n  number: true,\n  date: true,\n  month: true,\n  week: true,\n  time: true,\n  datetime: true,\n  'datetime-local': true\n};\n/**\n * Computes whether the given element should automatically trigger the\n * `focus-visible` class being added, i.e. whether it should always match\n * `:focus-visible` when focused.\n * @param {Element} node\n * @return {boolean}\n */\n\nfunction focusTriggersKeyboardModality(node) {\n  var type = node.type,\n      tagName = node.tagName;\n\n  if (tagName === 'INPUT' && inputTypesWhitelist[type] && !node.readOnly) {\n    return true;\n  }\n\n  if (tagName === 'TEXTAREA' && !node.readOnly) {\n    return true;\n  }\n\n  if (node.isContentEditable) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Keep track of our keyboard modality state with `hadKeyboardEvent`.\n * If the most recent user interaction was via the keyboard;\n * and the key press did not include a meta, alt/option, or control key;\n * then the modality is keyboard. Otherwise, the modality is not keyboard.\n * @param {KeyboardEvent} event\n */\n\n\nfunction handleKeyDown(event) {\n  if (event.metaKey || event.altKey || event.ctrlKey) {\n    return;\n  }\n\n  hadKeyboardEvent = true;\n}\n/**\n * If at any point a user clicks with a pointing device, ensure that we change\n * the modality away from keyboard.\n * This avoids the situation where a user presses a key on an already focused\n * element, and then clicks on a different element, focusing it with a\n * pointing device, while we still think we're in keyboard modality.\n */\n\n\nfunction handlePointerDown() {\n  hadKeyboardEvent = false;\n}\n\nfunction handleVisibilityChange() {\n  if (this.visibilityState === 'hidden') {\n    // If the tab becomes active again, the browser will handle calling focus\n    // on the element (Safari actually calls it twice).\n    // If this tab change caused a blur on an element with focus-visible,\n    // re-apply the class when the user switches back to the tab.\n    if (hadFocusVisibleRecently) {\n      hadKeyboardEvent = true;\n    }\n  }\n}\n\nfunction prepare(doc) {\n  doc.addEventListener('keydown', handleKeyDown, true);\n  doc.addEventListener('mousedown', handlePointerDown, true);\n  doc.addEventListener('pointerdown', handlePointerDown, true);\n  doc.addEventListener('touchstart', handlePointerDown, true);\n  doc.addEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nexport function teardown(doc) {\n  doc.removeEventListener('keydown', handleKeyDown, true);\n  doc.removeEventListener('mousedown', handlePointerDown, true);\n  doc.removeEventListener('pointerdown', handlePointerDown, true);\n  doc.removeEventListener('touchstart', handlePointerDown, true);\n  doc.removeEventListener('visibilitychange', handleVisibilityChange, true);\n}\n\nfunction isFocusVisible(event) {\n  var target = event.target;\n\n  try {\n    return target.matches(':focus-visible');\n  } catch (error) {} // browsers not implementing :focus-visible will throw a SyntaxError\n  // we use our own heuristic for those browsers\n  // rethrow might be better if it's not the expected error but do we really\n  // want to crash if focus-visible malfunctioned?\n  // no need for validFocusTarget check. the user does that by attaching it to\n  // focusable events only\n\n\n  return hadKeyboardEvent || focusTriggersKeyboardModality(target);\n}\n/**\n * Should be called if a blur event is fired on a focus-visible element\n */\n\n\nfunction handleBlurVisible() {\n  // To detect a tab/window switch, we look for a blur event followed\n  // rapidly by a visibility change.\n  // If we don't see a visibility change within 100ms, it's probably a\n  // regular focus change.\n  hadFocusVisibleRecently = true;\n  window.clearTimeout(hadFocusVisibleRecentlyTimeout);\n  hadFocusVisibleRecentlyTimeout = window.setTimeout(function () {\n    hadFocusVisibleRecently = false;\n  }, 100);\n}\n\nexport default function useIsFocusVisible() {\n  var ref = React.useCallback(function (instance) {\n    var node = ReactDOM.findDOMNode(instance);\n\n    if (node != null) {\n      prepare(node.ownerDocument);\n    }\n  }, []);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(isFocusVisible);\n  }\n\n  return {\n    isFocusVisible: isFocusVisible,\n    onBlurVisible: handleBlurVisible,\n    ref: ref\n  };\n}","/* eslint-disable react/jsx-props-no-spreading, no-shadow */\r\nimport React, { useMemo } from 'react';\r\nimport { Link } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n\r\n// Utils\r\nimport { isClient } from '../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    linkWrapper: {},\r\n}));\r\n\r\nconst DownloadJsonLink = ({\r\n    className = null,\r\n    children,\r\n    json = {},\r\n    name = 'object.json',\r\n}) => {\r\n    const classes = useStyles();\r\n    const href = useMemo(\r\n        () => {\r\n            if (isClient()) {\r\n                const base64Data = btoa(unescape(encodeURIComponent(JSON.stringify(json))));\r\n                return `data:application/json;base64,${base64Data}`;\r\n            }\r\n\r\n            return '#';\r\n        },\r\n        [json]\r\n    );\r\n\r\n    return (\r\n        <Link\r\n            className={classNames(\r\n                className,\r\n                classes.linkWrapper\r\n            )}\r\n            href={href}\r\n            download={name}\r\n            target=\"_blank\"\r\n        >\r\n            {children}\r\n        </Link>\r\n    );\r\n};\r\n\r\nDownloadJsonLink.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    json: PropTypes.object,\r\n};\r\n\r\nexport default DownloadJsonLink;\r\n","import { createIntl, createIntlCache } from 'gatsby-plugin-intl';\r\n\r\n// local translations\r\nimport localEn from './en.json';\r\nimport localPtBr from './pt-br.json';\r\nimport localEs from './es.json';\r\n\r\n// global translations\r\nimport globalEn from '../../../../intl/en.json';\r\nimport globalPtBr from '../../../../intl/pt-br.json';\r\nimport globalEs from '../../../../intl/es.json';\r\n\r\nconst translations = [\r\n    {\r\n        locale: 'en',\r\n        messages: {\r\n            ...globalEn,\r\n            ...localEn,\r\n        },\r\n    },\r\n    {\r\n        locale: 'pt-br',\r\n        messages: {\r\n            ...globalPtBr,\r\n            ...localPtBr,\r\n        },\r\n    },\r\n    {\r\n        locale: 'es',\r\n        messages: {\r\n            ...globalEs,\r\n            ...localEs,\r\n        },\r\n    },\r\n];\r\n\r\nexport default translations.map(\r\n    (translation) => createIntl(translation, createIntlCache())\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeSummary: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    resumeBasics: {\r\n        pageBreakInside: 'avoid',\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n        '& h2': { textTransform: 'uppercase', margin: '0' },\r\n    },\r\n    address: {\r\n        margin: '0',\r\n        padding: '0',\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 5px 0 0',\r\n            '&:after': { content: '\",\"' },\r\n            '&:last-child': { '&:after': { content: '\"\"' } },\r\n        },\r\n    },\r\n    'contact-info': {\r\n        margin: '0',\r\n        padding: '0',\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 5px 0 0',\r\n            '&:after': { content: '\" |\"' },\r\n            '&:last-child': { '&:after': { content: '\"\"' } },\r\n        },\r\n    },\r\n    'social-media': {\r\n        margin: '0',\r\n        padding: '0',\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 5px 0 0',\r\n            '&:after': { content: '\" |\"' },\r\n            '&:last-child': { '&:after': { content: '\"\"' } },\r\n        },\r\n    },\r\n    url: {},\r\n    detailsWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    summaryWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    image: {\r\n        width: '100px',\r\n        float: 'right',\r\n    },\r\n}));\r\n\r\nconst Basics = ({\r\n    basics: {\r\n        name,\r\n        label,\r\n        image,\r\n        email,\r\n        phone,\r\n        url,\r\n        summary,\r\n        profiles,\r\n        location,\r\n    },\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const {\r\n        address,\r\n        postalCode,\r\n        city,\r\n        countryCode,\r\n        region,\r\n    } = location || {};\r\n\r\n    const locationEnabled = Boolean(\r\n        address\r\n        || city\r\n        || region\r\n        || postalCode\r\n        || countryCode\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.resumeBasics}>\r\n                {image && (\r\n                    <img\r\n                        className={classes.image}\r\n                        src={image}\r\n                        alt=\"avatar\"\r\n                    />\r\n                )}\r\n                {name && <h2>{name}</h2>}\r\n                {label && <h3>{label}</h3>}\r\n                <div className={classes.detailsWrapper}>\r\n                    {locationEnabled && (\r\n                        <ul className={classes.address}>\r\n                            {address && <li key={uuid()}>{address}</li>}\r\n                            {city && <li key={uuid()}>{city}</li>}\r\n                            {region && <li key={uuid()}>{region}</li>}\r\n                            {postalCode && <li key={uuid()}>{postalCode}</li>}\r\n                            {countryCode && <li key={uuid()}>{countryCode}</li>}\r\n                        </ul>\r\n                    )}\r\n                    <ul className={classes['contact-info']}>\r\n                        {url && (\r\n                            <li key={uuid()}>\r\n                                <a\r\n                                    className={classes.url}\r\n                                    href={url}\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {url}\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                        {phone && <li key={uuid()}>{phone}</li>}\r\n                        {email && <li key={uuid()}>{email}</li>}\r\n                    </ul>\r\n                    {profiles?.length > 0 && (\r\n                        <ul className={classes['social-media']}>\r\n                            {profiles?.map((profile) => {\r\n                                if (profile) {\r\n                                    const {\r\n                                        url: profileUrl,\r\n                                        network,\r\n                                        username,\r\n                                    } = profile || {};\r\n\r\n                                    const isProfileEnable = Boolean(\r\n                                        profileUrl\r\n                                        && network\r\n                                        && username\r\n                                    );\r\n\r\n                                    return isProfileEnable && (\r\n                                        <li key={uuid()}>\r\n                                            <a\r\n                                                href={profileUrl}\r\n                                                title={username}\r\n                                                target=\"_blank\"\r\n                                            >\r\n                                                {network}\r\n                                            </a>\r\n                                        </li>\r\n                                    );\r\n                                }\r\n\r\n                                return null;\r\n                            })}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {summary && (\r\n                <div className={classes.resumeSummary}>\r\n                    <h3>\r\n                        {intl.formatMessage({ id: 'summary' })}\r\n                    </h3>\r\n                    <div className={classes.summaryWrapper}>\r\n                        <p>{summary}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Basics;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeAwards: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    award: { fontWeight: 'bold' },\r\n    awards: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    awardWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Awards = ({ awards }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return awards?.length > 0 && (\r\n        <div className={classes.resumeAwards}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'awards' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.awards}>\r\n                    {awards.map((award) => {\r\n                        if (award) {\r\n                            const {\r\n                                title,\r\n                                date,\r\n                                awarder,\r\n                                summary,\r\n                            } = award || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.awardWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.award}>\r\n                                        {title}\r\n                                        {(date) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {` (${date})`}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    <p>{awarder}</p>\r\n                                    <p>{summary}</p>\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Awards;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeEducation: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    type: { fontWeight: 'bold' },\r\n    institution: {},\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    courses: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    coursesDetails: {\r\n        display: 'flex',\r\n        '& ul': {\r\n            margin: '0 0 0 5px',\r\n            padding: '0',\r\n            display: 'flex',\r\n            listStyle: 'none',\r\n            '& li': {\r\n                margin: '0 5px 0 0',\r\n                '&:after': { content: '\",\"' },\r\n                '&:last-child': { '&:after': { content: '\"\"' } },\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    educationWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Education = ({ education: educations }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return educations?.length > 0 && (\r\n        <div className={classes.resumeEducation}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'education' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.courses}>\r\n                    {educations.map((education) => {\r\n                        if (education) {\r\n                            const {\r\n                                institution,\r\n                                url,\r\n                                area,\r\n                                studyType,\r\n                                startDate,\r\n                                endDate,\r\n                                score,\r\n                                courses,\r\n                            } = education || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.educationWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.type}>\r\n                                        {area}\r\n                                        {(area && studyType) && ', '}\r\n                                        {studyType}\r\n                                        {(startDate || endDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {' ('}\r\n                                                {startDate}\r\n                                                {(startDate && endDate) && ' - '}\r\n                                                {endDate}\r\n                                                {')'}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    <p className={classes.institution}>\r\n                                        {\r\n                                            (url && institution) ?\r\n                                                (\r\n                                                    <a href={url}>\r\n                                                        {institution}\r\n                                                    </a>\r\n                                                )\r\n                                                : institution}\r\n                                        {score && `, score: ${score}`}\r\n                                    </p>\r\n                                    {courses?.length > 0 && (\r\n                                        <div className={classes.coursesDetails}>\r\n                                            <p>Courses: </p>\r\n                                            <ul>\r\n                                                {courses?.map((course) => course && (\r\n                                                    <li key={uuid()}>\r\n                                                        {course}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeInterests: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    interests: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    interest: {\r\n        fontWeight: 'bold',\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    interestWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Interests = ({ interests }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return interests?.length > 0 && (\r\n        <div className={classes.resumeInterests}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'interests' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.interests}>\r\n                    {interests.map((interest) => {\r\n                        if (interest) {\r\n                            const {\r\n                                name,\r\n                                keywords,\r\n                            } = interest || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.interestWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    {name && (\r\n                                        <p className={classes.interest}>\r\n                                            {name}\r\n                                        </p>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Interests;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeLanguages: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    languages: {\r\n        margin: '0',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    languageWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Languages = ({ languages }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return languages?.length > 0 && (\r\n        <div className={classes.resumeLanguages}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'languages' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.languages}>\r\n                    {languages.map((lang) => {\r\n                        if (lang) {\r\n                            const {\r\n                                language,\r\n                                fluency,\r\n                            } = lang || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.languageWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p>\r\n                                        {language}\r\n                                        {(language && fluency) && ', '}\r\n                                        {fluency}\r\n                                    </p>\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Languages;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumePublications: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    publications: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    publication: {\r\n        fontWeight: 'bold',\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    publicationWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Publications = ({ publications }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return publications?.length > 0 && (\r\n        <div className={classes.resumePublications}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'publications' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.publications}>\r\n                    {publications.map((publication) => {\r\n                        if (publication) {\r\n                            const {\r\n                                name,\r\n                                publisher,\r\n                                releaseDate,\r\n                                url,\r\n                                summary,\r\n                            } = publication || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.publicationWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.publication}>\r\n                                        {name}\r\n                                        {(publisher && name) && ` ${intl.formatMessage({ id: 'at' })} `}\r\n                                        {publisher}\r\n                                        {(releaseDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {` (${releaseDate})`}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    {url && <a href={url}>{url}</a>}\r\n                                    {summary && <p>{summary}</p>}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Publications;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeReferences: {\r\n        padding: '10px 0',\r\n    },\r\n    name: { fontWeight: 'bold' },\r\n    references: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    reference: {\r\n        fontStyle: 'italic',\r\n        textIndent: '15px',\r\n        '&:before': {\r\n            content: '\"❝\"',\r\n            fontSize: '25px',\r\n            margin: '-8px 0 0 -35px',\r\n            position: 'absolute',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    referenceWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst References = ({ references }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return references?.length > 0 && (\r\n        <div className={classes.resumeReferences}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'references' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.references}>\r\n                    {references.map((ref) => {\r\n                        if (ref) {\r\n                            const {\r\n                                name,\r\n                                reference,\r\n                            } = ref || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.referenceWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    {name && (\r\n                                        <p className={classes.name}>\r\n                                            {name}\r\n                                        </p>\r\n                                    )}\r\n                                    {reference && (\r\n                                        <p className={classes.reference}>\r\n                                            {reference}\r\n                                        </p>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default References;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeSkills: {\r\n        pageBreakInside: 'avoid',\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    skills: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    skillTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Skills = ({ skills }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return skills?.length > 0 && (\r\n        <div className={classes.resumeSkills}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'skills' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.skills}>\r\n                    {skills.map((skill) => {\r\n                        if (skill) {\r\n                            const {\r\n                                name,\r\n                                level,\r\n                                keywords,\r\n                            } = skill || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    {(name || level) && (\r\n                                        <p className={classes.skillTitle}>\r\n                                            {name}\r\n                                            {(name && level) && ', '}\r\n                                            {level}\r\n                                        </p>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeVolunteer: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    volunteers: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    position: { fontWeight: 'bold' },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    url: {},\r\n    summary: {},\r\n    highlights: {\r\n        '& li': {\r\n            marginBottom: '1px',\r\n            fontStyle: 'italic',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    volunteerWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Volunteer = ({ volunteer: volunteers }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return volunteers?.length > 0 && (\r\n        <div className={classes.resumeVolunteer}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'volunteers' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.volunteers}>\r\n                    {volunteers.map((volunteer) => {\r\n                        if (volunteer) {\r\n                            const {\r\n                                organization,\r\n                                position,\r\n                                url,\r\n                                startDate,\r\n                                endDate,\r\n                                summary,\r\n                                highlights,\r\n                            } = volunteer || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.volunteerWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.position}>\r\n                                        {position}\r\n                                        {(position && organization) && ` ${intl.formatMessage({ id: 'at' })} `}\r\n                                        {organization}\r\n                                        {(startDate || endDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {' ('}\r\n                                                {startDate}\r\n                                                {(startDate && endDate) && ' - '}\r\n                                                {endDate}\r\n                                                {')'}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    <p className={classes.url}>\r\n                                        {url && <a href={url}>{url}</a>}\r\n                                    </p>\r\n                                    <p className={classes.summary}>\r\n                                        {summary}\r\n                                    </p>\r\n                                    {highlights?.length > 0 && (\r\n                                        <ul className={classes.highlights}>\r\n                                            {highlights?.map((highlight) =>\r\n                                                highlight && (\r\n                                                    <li key={uuid()}>\r\n                                                        {highlight}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Volunteer;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeWork: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    works: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    position: {\r\n        fontWeight: 'bold',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    urlAndLocation: {\r\n        fontStyle: 'italic',\r\n        color: theme.palette.type === 'dark' ? '#b7bfc1' : '#6a5e5e',\r\n    },\r\n    summary: {\r\n        whiteSpace: 'break-spaces',\r\n        marginBottom: '5px !important',\r\n    },\r\n    description: {\r\n        whiteSpace: 'break-spaces',\r\n    },\r\n    highlights: {\r\n        '& li': {\r\n            marginBottom: '1px',\r\n            fontStyle: 'italic',\r\n        },\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    workWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    workHeader: {\r\n        marginBottom: '5px',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Work = ({ work: works }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return works?.length > 0 && (\r\n        <div className={classes.resumeWork}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'experience' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.works}>\r\n                    {works.map((work) => {\r\n                        if (work) {\r\n                            const {\r\n                                name,\r\n                                location,\r\n                                description,\r\n                                position,\r\n                                url,\r\n                                startDate,\r\n                                endDate,\r\n                                summary,\r\n                                highlights,\r\n                                keywords,\r\n                            } = work || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.workWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <div className={classes.workHeader}>\r\n                                        <p className={classes.position}>\r\n                                            {position}\r\n                                            {(position && name) && ` ${intl.formatMessage({ id: 'at' })} `}\r\n                                            {name}\r\n                                            {(startDate || endDate) && (\r\n                                                <span className={classes.positionDate}>\r\n                                                    {' ('}\r\n                                                    {startDate}\r\n                                                    {(startDate && endDate) && ' - '}\r\n                                                    {endDate}\r\n                                                    {')'}\r\n                                                </span>\r\n                                            )}\r\n                                        </p>\r\n                                        <p className={classes.urlAndLocation}>\r\n                                            {location}\r\n                                            {(location && url) && ', '}\r\n                                            {url && (\r\n                                                <a href={url}>\r\n                                                    {url}\r\n                                                </a>\r\n                                            )}\r\n                                        </p>\r\n                                    </div>\r\n                                    <p className={classes.summary}>\r\n                                        {summary}\r\n                                    </p>\r\n                                    <p className={classes.description}>\r\n                                        {description}\r\n                                    </p>\r\n                                    {highlights?.length > 0 && (\r\n                                        <ul className={classes.highlights}>\r\n                                            {highlights?.map((highlight) =>\r\n                                                highlight && (\r\n                                                    <li key={uuid()}>\r\n                                                        {highlight}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Work;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeProjects: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    projects: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    project: {\r\n        fontWeight: 'bold',\r\n    },\r\n    highlights: {\r\n        '& li': {\r\n            marginBottom: '1px',\r\n            fontStyle: 'italic',\r\n        },\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    projectWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Projects = ({ projects }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return projects?.length > 0 && (\r\n        <div className={classes.resumeProjects}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'projects' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.projects}>\r\n                    {projects.map((project) => {\r\n                        if (project) {\r\n                            const {\r\n                                name,\r\n                                description,\r\n                                highlights,\r\n                                keywords,\r\n                                startDate,\r\n                                endDate,\r\n                                url,\r\n                                roles,\r\n                                entity,\r\n                                type,\r\n                            } = project || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.projectWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.project}>\r\n                                        {name}\r\n                                        {(startDate || endDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {' ('}\r\n                                                {startDate}\r\n                                                {(startDate && endDate) && ' - '}\r\n                                                {endDate}\r\n                                                {')'}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    {type && <p>{type}</p>}\r\n                                    {entity && <p>{entity}</p>}\r\n                                    {url && <a href={url}>{url}</a>}\r\n                                    {description && <p>{description}</p>}\r\n                                    {highlights?.length > 0 && (\r\n                                        <ul className={classes.highlights}>\r\n                                            {highlights?.map((highlight) =>\r\n                                                highlight && (\r\n                                                    <li key={uuid()}>\r\n                                                        {highlight}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { Fragment, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\nimport Mustache from 'mustache';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        whiteSpace: 'break-spaces',\r\n        marginBottom: '40px',\r\n        '@media print': {\r\n            clear: 'both',\r\n            pageBreakAfter: 'always',\r\n            breakAfter: 'page',\r\n            minHeight: '29.7cm',\r\n            marginBottom: 0,\r\n        },\r\n    },\r\n    variable: {\r\n        backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#cccccc',\r\n        padding: '0 2px',\r\n        '@media print': {\r\n            backgroundColor: 'unset',\r\n            padding: 0,\r\n        },\r\n    },\r\n    pageBreakWarning: {\r\n        height: '35px',\r\n        padding: 0,\r\n        marginLeft: '-42px',\r\n        width: '112%',\r\n        textAlign: 'center',\r\n        fontStyle: 'italic',\r\n        color: theme.palette.type === 'dark' ? '#6b6b6b' : '#b1afaf',\r\n        backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa',\r\n        paddingTop: '5px',\r\n        '@media print': {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst CoverLetter = ({\r\n    coverLetterText = '',\r\n    coverLetterVariables = [],\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const variables = useMemo(() => {\r\n        const newVariables = {};\r\n        Object.entries(coverLetterVariables)\r\n            .forEach((entry) => {\r\n                const [key, value] = entry;\r\n                newVariables[key] = renderToString(\r\n                    <span className={classes.variable}>\r\n                        {value}\r\n                    </span>\r\n                );\r\n            });\r\n\r\n        return newVariables;\r\n    }, [classes.variable, coverLetterVariables]);\r\n\r\n    const text = useMemo(\r\n        () => coverLetterText.replaceAll('{{', '{{{').replaceAll('}}', '}}}'),\r\n        [coverLetterText]\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className={classes.contentWrapper}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: Mustache.render(text, variables),\r\n                }}\r\n            />\r\n            <div className={classes.pageBreakWarning}>\r\n                {intl.formatMessage({ id: 'this_is_a_page_break' })}\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CoverLetter;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeCertificates: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    award: { fontWeight: 'bold' },\r\n    certificates: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    awardWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Certificates = ({ certificates }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return certificates?.length > 0 && (\r\n        <div className={classes.resumeCertificates}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'certificates' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.certificates}>\r\n                    {certificates.map((award) => {\r\n                        if (award) {\r\n                            const {\r\n                                name,\r\n                                date,\r\n                                url,\r\n                                issuer,\r\n                            } = award || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.awardWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.award}>\r\n                                        {name}\r\n                                        {(date) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {` (${date})`}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    {url && <a href={url}>{url}</a>}\r\n                                    <p>{issuer}</p>\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Certificates;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Components\r\nimport DownloadJsonLink from '../../../DownloadJsonLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeDownload: {},\r\n}));\r\n\r\nconst Download = ({ jsonResume }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <div className={classes.resumeDownload}>\r\n            {intl.formatMessage({\r\n                id: 'download_data',\r\n            },\r\n            {\r\n                // eslint-disable-next-line react/display-name\r\n                a: (msg) => (\r\n                    <DownloadJsonLink\r\n                        json={jsonResume}\r\n                        name={`jsonResume-${Date.now()}.json`}\r\n                    >\r\n                        {msg}\r\n                    </DownloadJsonLink>\r\n                ),\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Download;\r\n","import React, { useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createIntl, createIntlCache, RawIntlProvider, useIntl } from 'gatsby-plugin-intl';\r\n\r\n// local template translations\r\nimport templateIntls from './intl';\r\n\r\n// Components\r\nimport Basics from './Sections/Basics';\r\nimport Awards from './Sections/Awards';\r\nimport Education from './Sections/Education';\r\nimport Interests from './Sections/Interests';\r\nimport Languages from './Sections/Languages';\r\nimport Publications from './Sections/Publications';\r\nimport References from './Sections/References';\r\nimport Skills from './Sections/Skills';\r\nimport Volunteer from './Sections/Volunteer';\r\nimport Work from './Sections/Work';\r\nimport Projects from './Sections/Projects';\r\nimport CoverLetter from './Sections/CoverLetter';\r\nimport Certificates from './Sections/Certificates';\r\nimport Download from './Sections/Download';\r\n\r\n// Utils\r\nimport { isObjectNotEmpty } from '../../../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeDefaultTemplate: {\r\n        padding: '40px',\r\n        '& h3': { margin: '0' },\r\n        color: theme.palette.text.primary,\r\n        '& a': {\r\n            color: '#8da4f7',\r\n        },\r\n        '& a:visited': {\r\n            color: '#48578a',\r\n        },\r\n        '& p': {\r\n            margin: 0,\r\n            marginBlockStart: 0,\r\n            marginBlockEnd: 0,\r\n        },\r\n        '@media print': {\r\n            padding: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst VanHack = ({\r\n    customTranslations = {},\r\n    isPrinting = false,\r\n    isOnlineViewer = false,\r\n    coverLetterVariables = [],\r\n    jsonResume,\r\n    jsonResume: {\r\n        basics,\r\n        work,\r\n        skills,\r\n        education,\r\n        awards,\r\n        volunteer,\r\n        publications,\r\n        languages,\r\n        interests,\r\n        references,\r\n        projects,\r\n        certificates,\r\n        // custom attributes\r\n        coverLetter,\r\n        enableSourceDataDownload = false,\r\n    },\r\n}) => {\r\n    const intl = useIntl();\r\n    const classes = useStyles();\r\n    const templateIntl = useMemo(() => {\r\n        let newIntl = templateIntls.find(\r\n            (tempIntl) => tempIntl.locale === intl.locale\r\n        );\r\n\r\n        if (!newIntl) {\r\n            newIntl = templateIntls.find(\r\n                (tempIntl) => tempIntl.locale === intl.defaultLocale\r\n            );\r\n        }\r\n\r\n        if (isObjectNotEmpty(customTranslations)) {\r\n            return createIntl({\r\n                locale: newIntl.locale,\r\n                messages: {\r\n                    ...newIntl.messages,\r\n                    ...customTranslations,\r\n                },\r\n            }, createIntlCache());\r\n        }\r\n\r\n        return newIntl;\r\n    }, [customTranslations, intl.defaultLocale, intl.locale]);\r\n\r\n    return (\r\n        <RawIntlProvider\r\n            value={templateIntl}\r\n        >\r\n            <div className={classes.resumeDefaultTemplate}>\r\n                {(coverLetter) && (\r\n                    <CoverLetter\r\n                        coverLetterText={coverLetter}\r\n                        coverLetterVariables={coverLetterVariables}\r\n                    />\r\n                )}\r\n                {enableSourceDataDownload && (\r\n                    <Download jsonResume={jsonResume} />\r\n                )}\r\n                {isObjectNotEmpty(basics) && (\r\n                    <Basics\r\n                        basics={basics}\r\n                    />\r\n                )}\r\n                {(skills?.length > 0) && (\r\n                    <Skills\r\n                        skills={skills}\r\n                    />\r\n                )}\r\n                {(work?.length > 0) && (\r\n                    <Work\r\n                        work={work}\r\n                    />\r\n                )}\r\n                {(education?.length > 0) && (\r\n                    <Education\r\n                        education={education}\r\n                    />\r\n                )}\r\n                {(awards?.length > 0) && (\r\n                    <Awards\r\n                        awards={awards}\r\n                    />\r\n                )}\r\n                {(certificates?.length > 0) && (\r\n                    <Certificates\r\n                        certificates={certificates}\r\n                    />\r\n                )}\r\n                {(volunteer?.length > 0) && (\r\n                    <Volunteer\r\n                        volunteer={volunteer}\r\n                    />\r\n                )}\r\n                {(publications?.length > 0) && (\r\n                    <Publications\r\n                        publications={publications}\r\n                    />\r\n                )}\r\n                {(projects?.length > 0) && (\r\n                    <Projects\r\n                        projects={projects}\r\n                    />\r\n                )}\r\n                {(languages?.length > 0) && (\r\n                    <Languages\r\n                        languages={languages}\r\n                    />\r\n                )}\r\n                {(interests?.length > 0) && (\r\n                    <Interests\r\n                        interests={interests}\r\n                    />\r\n                )}\r\n                {(references?.length > 0) && (\r\n                    <References\r\n                        references={references}\r\n                    />\r\n                )}\r\n            </div>\r\n        </RawIntlProvider>\r\n    );\r\n};\r\n\r\nexport default VanHack;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default (sectionTitle, firstItem) => {\r\n    const [titleStyle, setTitleStyle] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (sectionTitle.current && firstItem.current) {\r\n            setTitleStyle({\r\n                height: sectionTitle.current.clientHeight + firstItem.current.clientHeight,\r\n                marginBottom: -firstItem.current.clientHeight,\r\n            });\r\n        }\r\n    }, [firstItem, sectionTitle]);\r\n\r\n    return titleStyle;\r\n};\r\n"],"sourceRoot":""}