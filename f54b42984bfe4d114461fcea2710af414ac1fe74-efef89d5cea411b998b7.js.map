{"version":3,"sources":["webpack://resume-builder/./src/components/DownloadJsonLink.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/intl/index.js","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Basics.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Awards.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Education.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Interests.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Languages.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Publications.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/References.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Skills.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Volunteer.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Work.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Projects.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/CoverLetter.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Certificates.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Sections/Download.jsx","webpack://resume-builder/./src/components/ResumeTemplates/Default/Index.jsx","webpack://resume-builder/./src/components/hooks/useAntiPageBreakTitle.js"],"names":["useStyles","makeStyles","theme","linkWrapper","className","children","json","name","classes","href","useMemo","isClient","btoa","unescape","encodeURIComponent","JSON","stringify","classNames","download","target","locale","messages","globalEn","localEn","globalPtBr","localPtBr","globalEs","localEs","map","translation","createIntl","createIntlCache","resumeSummary","padding","borderBottom","resumeBasics","pageBreakInside","textTransform","margin","address","display","listStyle","content","url","detailsWrapper","marginLeft","summaryWrapper","image","width","float","basics","label","email","phone","summary","profiles","location","intl","useIntl","postalCode","city","countryCode","region","locationEnabled","Boolean","Fragment","src","alt","key","uuid","length","profile","profileUrl","network","username","title","formatMessage","id","resumeAwards","award","fontWeight","awards","contentWrapper","awardWrapper","positionDate","fontStyle","fontSize","firstItem","useRef","sectionTitle","titleStyle","useAntiPageBreakTitle","ref","style","date","awarder","refProps","current","resumeEducation","type","institution","courses","coursesDetails","educationWrapper","education","educations","area","studyType","startDate","endDate","score","course","resumeInterests","interests","interest","keywords","flexWrap","paddingLeft","backgroundColor","palette","borderRadius","interestWrapper","keyword","resumeLanguages","languages","languageWrapper","lang","language","fluency","resumePublications","publications","publication","publicationWrapper","publisher","releaseDate","resumeReferences","references","reference","textIndent","position","referenceWrapper","resumeSkills","skills","skillTitle","skill","level","resumeVolunteer","volunteers","highlights","marginBottom","volunteerWrapper","volunteer","organization","highlight","resumeWork","works","urlAndLocation","color","whiteSpace","description","workWrapper","workHeader","work","resumeProjects","projects","project","projectWrapper","roles","entity","clear","pageBreakAfter","breakAfter","minHeight","variable","pageBreakWarning","height","textAlign","paddingTop","coverLetterText","coverLetterVariables","showPageBreak","variables","newVariables","Object","entries","forEach","entry","value","renderToString","text","replaceAll","dangerouslySetInnerHTML","__html","Mustache","resumeCertificates","certificates","issuer","resumeDownload","jsonResume","a","msg","DownloadJsonLink","Date","now","resumeDefaultTemplate","primary","marginBlockStart","marginBlockEnd","customTranslations","isPrinting","isOnlineViewer","coverLetter","enableSourceDataDownload","templateIntl","newIntl","templateIntls","tempIntl","defaultLocale","isObjectNotEmpty","showCoverLetterPageBreak","RawIntlProvider","setTitleStyle","useState","useEffect","clientHeight"],"mappings":"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","file":"f54b42984bfe4d114461fcea2710af414ac1fe74-efef89d5cea411b998b7.js","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading, no-shadow */\r\nimport React, { useMemo } from 'react';\r\nimport { Link } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport classNames from 'classnames';\r\n\r\n// Utils\r\nimport { isClient } from '../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    linkWrapper: {},\r\n}));\r\n\r\nconst DownloadJsonLink = ({\r\n    className = null,\r\n    children,\r\n    json = {},\r\n    name = 'object.json',\r\n}) => {\r\n    const classes = useStyles();\r\n    const href = useMemo(\r\n        () => {\r\n            if (isClient()) {\r\n                const base64Data = btoa(unescape(encodeURIComponent(JSON.stringify(json))));\r\n                return `data:application/json;base64,${base64Data}`;\r\n            }\r\n\r\n            return '#';\r\n        },\r\n        [json]\r\n    );\r\n\r\n    return (\r\n        <Link\r\n            className={classNames(\r\n                className,\r\n                classes.linkWrapper\r\n            )}\r\n            href={href}\r\n            download={name}\r\n            target=\"_blank\"\r\n        >\r\n            {children}\r\n        </Link>\r\n    );\r\n};\r\n\r\nDownloadJsonLink.propTypes = {\r\n    children: PropTypes.node,\r\n    className: PropTypes.string,\r\n    name: PropTypes.string,\r\n    // eslint-disable-next-line react/forbid-prop-types\r\n    json: PropTypes.object,\r\n};\r\n\r\nexport default DownloadJsonLink;\r\n","import { createIntl, createIntlCache } from 'gatsby-plugin-intl';\r\n\r\n// local translations\r\nimport localEn from './en.json';\r\nimport localPtBr from './pt-br.json';\r\nimport localEs from './es.json';\r\n\r\n// global translations\r\nimport globalEn from '../../../../intl/en.json';\r\nimport globalPtBr from '../../../../intl/pt-br.json';\r\nimport globalEs from '../../../../intl/es.json';\r\n\r\nconst translations = [\r\n    {\r\n        locale: 'en',\r\n        messages: {\r\n            ...globalEn,\r\n            ...localEn,\r\n        },\r\n    },\r\n    {\r\n        locale: 'pt-br',\r\n        messages: {\r\n            ...globalPtBr,\r\n            ...localPtBr,\r\n        },\r\n    },\r\n    {\r\n        locale: 'es',\r\n        messages: {\r\n            ...globalEs,\r\n            ...localEs,\r\n        },\r\n    },\r\n];\r\n\r\nexport default translations.map(\r\n    (translation) => createIntl(translation, createIntlCache())\r\n);\r\n","import React, { Fragment } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeSummary: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    resumeBasics: {\r\n        pageBreakInside: 'avoid',\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n        '& h2': { textTransform: 'uppercase', margin: '0' },\r\n    },\r\n    address: {\r\n        margin: '0',\r\n        padding: '0',\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 5px 0 0',\r\n            '&:after': { content: '\",\"' },\r\n            '&:last-child': { '&:after': { content: '\"\"' } },\r\n        },\r\n    },\r\n    'contact-info': {\r\n        margin: '0',\r\n        padding: '0',\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 5px 0 0',\r\n            '&:after': { content: '\" |\"' },\r\n            '&:last-child': { '&:after': { content: '\"\"' } },\r\n        },\r\n    },\r\n    'social-media': {\r\n        margin: '0',\r\n        padding: '0',\r\n        display: 'flex',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 5px 0 0',\r\n            '&:after': { content: '\" |\"' },\r\n            '&:last-child': { '&:after': { content: '\"\"' } },\r\n        },\r\n    },\r\n    url: {},\r\n    detailsWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    summaryWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    image: {\r\n        width: '100px',\r\n        float: 'right',\r\n    },\r\n}));\r\n\r\nconst Basics = ({\r\n    basics: {\r\n        name,\r\n        label,\r\n        image,\r\n        email,\r\n        phone,\r\n        url,\r\n        summary,\r\n        profiles,\r\n        location,\r\n    },\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const {\r\n        address,\r\n        postalCode,\r\n        city,\r\n        countryCode,\r\n        region,\r\n    } = location || {};\r\n\r\n    const locationEnabled = Boolean(\r\n        address\r\n        || city\r\n        || region\r\n        || postalCode\r\n        || countryCode\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className={classes.resumeBasics}>\r\n                {image && (\r\n                    <img\r\n                        className={classes.image}\r\n                        src={image}\r\n                        alt=\"avatar\"\r\n                    />\r\n                )}\r\n                {name && <h2>{name}</h2>}\r\n                {label && <h3>{label}</h3>}\r\n                <div className={classes.detailsWrapper}>\r\n                    {locationEnabled && (\r\n                        <ul className={classes.address}>\r\n                            {address && <li key={uuid()}>{address}</li>}\r\n                            {city && <li key={uuid()}>{city}</li>}\r\n                            {region && <li key={uuid()}>{region}</li>}\r\n                            {postalCode && <li key={uuid()}>{postalCode}</li>}\r\n                            {countryCode && <li key={uuid()}>{countryCode}</li>}\r\n                        </ul>\r\n                    )}\r\n                    <ul className={classes['contact-info']}>\r\n                        {url && (\r\n                            <li key={uuid()}>\r\n                                <a\r\n                                    className={classes.url}\r\n                                    href={url}\r\n                                    target=\"_blank\"\r\n                                >\r\n                                    {url}\r\n                                </a>\r\n                            </li>\r\n                        )}\r\n                        {phone && <li key={uuid()}>{phone}</li>}\r\n                        {email && <li key={uuid()}>{email}</li>}\r\n                    </ul>\r\n                    {profiles?.length > 0 && (\r\n                        <ul className={classes['social-media']}>\r\n                            {profiles?.map((profile) => {\r\n                                if (profile) {\r\n                                    const {\r\n                                        url: profileUrl,\r\n                                        network,\r\n                                        username,\r\n                                    } = profile || {};\r\n\r\n                                    const isProfileEnable = Boolean(\r\n                                        profileUrl\r\n                                        && network\r\n                                        && username\r\n                                    );\r\n\r\n                                    return isProfileEnable && (\r\n                                        <li key={uuid()}>\r\n                                            <a\r\n                                                href={profileUrl}\r\n                                                title={username}\r\n                                                target=\"_blank\"\r\n                                            >\r\n                                                {network}\r\n                                            </a>\r\n                                        </li>\r\n                                    );\r\n                                }\r\n\r\n                                return null;\r\n                            })}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            </div>\r\n            {summary && (\r\n                <div className={classes.resumeSummary}>\r\n                    <h3>\r\n                        {intl.formatMessage({ id: 'summary' })}\r\n                    </h3>\r\n                    <div className={classes.summaryWrapper}>\r\n                        <p>{summary}</p>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Basics;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeAwards: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    award: { fontWeight: 'bold' },\r\n    awards: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    awardWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Awards = ({ awards }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return awards?.length > 0 && (\r\n        <div className={classes.resumeAwards}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'awards' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.awards}>\r\n                    {awards.map((award) => {\r\n                        if (award) {\r\n                            const {\r\n                                title,\r\n                                date,\r\n                                awarder,\r\n                                summary,\r\n                            } = award || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.awardWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.award}>\r\n                                        {title}\r\n                                        {(date) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {` (${date})`}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    <p>{awarder}</p>\r\n                                    <p>{summary}</p>\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Awards;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeEducation: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    type: { fontWeight: 'bold' },\r\n    institution: {},\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    courses: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    coursesDetails: {\r\n        display: 'flex',\r\n        '& ul': {\r\n            margin: '0 0 0 5px',\r\n            padding: '0',\r\n            display: 'flex',\r\n            listStyle: 'none',\r\n            '& li': {\r\n                margin: '0 5px 0 0',\r\n                '&:after': { content: '\",\"' },\r\n                '&:last-child': { '&:after': { content: '\"\"' } },\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    educationWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Education = ({ education: educations }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return educations?.length > 0 && (\r\n        <div className={classes.resumeEducation}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'education' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.courses}>\r\n                    {educations.map((education) => {\r\n                        if (education) {\r\n                            const {\r\n                                institution,\r\n                                url,\r\n                                area,\r\n                                studyType,\r\n                                startDate,\r\n                                endDate,\r\n                                score,\r\n                                courses,\r\n                            } = education || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.educationWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.type}>\r\n                                        {area}\r\n                                        {(area && studyType) && ', '}\r\n                                        {studyType}\r\n                                        {(startDate || endDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {' ('}\r\n                                                {startDate}\r\n                                                {(startDate && endDate) && ' - '}\r\n                                                {endDate}\r\n                                                {')'}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    <p className={classes.institution}>\r\n                                        {\r\n                                            (url && institution) ?\r\n                                                (\r\n                                                    <a href={url}>\r\n                                                        {institution}\r\n                                                    </a>\r\n                                                )\r\n                                                : institution}\r\n                                        {score && `, score: ${score}`}\r\n                                    </p>\r\n                                    {courses?.length > 0 && (\r\n                                        <div className={classes.coursesDetails}>\r\n                                            <p>Courses: </p>\r\n                                            <ul>\r\n                                                {courses?.map((course) => course && (\r\n                                                    <li key={uuid()}>\r\n                                                        {course}\r\n                                                    </li>\r\n                                                ))}\r\n                                            </ul>\r\n                                        </div>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Education;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeInterests: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    interests: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    interest: {\r\n        fontWeight: 'bold',\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    interestWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Interests = ({ interests }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return interests?.length > 0 && (\r\n        <div className={classes.resumeInterests}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'interests' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.interests}>\r\n                    {interests.map((interest) => {\r\n                        if (interest) {\r\n                            const {\r\n                                name,\r\n                                keywords,\r\n                            } = interest || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.interestWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    {name && (\r\n                                        <p className={classes.interest}>\r\n                                            {name}\r\n                                        </p>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Interests;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeLanguages: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    languages: {\r\n        margin: '0',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    languageWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Languages = ({ languages }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return languages?.length > 0 && (\r\n        <div className={classes.resumeLanguages}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'languages' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.languages}>\r\n                    {languages.map((lang) => {\r\n                        if (lang) {\r\n                            const {\r\n                                language,\r\n                                fluency,\r\n                            } = lang || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.languageWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p>\r\n                                        {language}\r\n                                        {(language && fluency) && ', '}\r\n                                        {fluency}\r\n                                    </p>\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Languages;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumePublications: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    publications: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    publication: {\r\n        fontWeight: 'bold',\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    publicationWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Publications = ({ publications }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return publications?.length > 0 && (\r\n        <div className={classes.resumePublications}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'publications' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.publications}>\r\n                    {publications.map((publication) => {\r\n                        if (publication) {\r\n                            const {\r\n                                name,\r\n                                publisher,\r\n                                releaseDate,\r\n                                url,\r\n                                summary,\r\n                            } = publication || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.publicationWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.publication}>\r\n                                        {name}\r\n                                        {(publisher && name) && ` ${intl.formatMessage({ id: 'at' })} `}\r\n                                        {publisher}\r\n                                        {(releaseDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {` (${releaseDate})`}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    {url && <a href={url}>{url}</a>}\r\n                                    {summary && <p>{summary}</p>}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Publications;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeReferences: {\r\n        padding: '10px 0',\r\n    },\r\n    name: { fontWeight: 'bold' },\r\n    references: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    reference: {\r\n        fontStyle: 'italic',\r\n        textIndent: '15px',\r\n        '&:before': {\r\n            content: '\"❝\"',\r\n            fontSize: '25px',\r\n            margin: '-8px 0 0 -35px',\r\n            position: 'absolute',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    referenceWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst References = ({ references }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return references?.length > 0 && (\r\n        <div className={classes.resumeReferences}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'references' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.references}>\r\n                    {references.map((ref) => {\r\n                        if (ref) {\r\n                            const {\r\n                                name,\r\n                                reference,\r\n                            } = ref || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.referenceWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    {name && (\r\n                                        <p className={classes.name}>\r\n                                            {name}\r\n                                        </p>\r\n                                    )}\r\n                                    {reference && (\r\n                                        <p className={classes.reference}>\r\n                                            {reference}\r\n                                        </p>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default References;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeSkills: {\r\n        pageBreakInside: 'avoid',\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    skills: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    skillTitle: {\r\n        fontWeight: 'bold',\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Skills = ({ skills }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return skills?.length > 0 && (\r\n        <div className={classes.resumeSkills}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'skills' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.skills}>\r\n                    {skills.map((skill) => {\r\n                        if (skill) {\r\n                            const {\r\n                                name,\r\n                                level,\r\n                                keywords,\r\n                            } = skill || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    {(name || level) && (\r\n                                        <p className={classes.skillTitle}>\r\n                                            {name}\r\n                                            {(name && level) && ', '}\r\n                                            {level}\r\n                                        </p>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Skills;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeVolunteer: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    volunteers: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    position: { fontWeight: 'bold' },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    url: {},\r\n    summary: {},\r\n    highlights: {\r\n        '& li': {\r\n            marginBottom: '1px',\r\n            fontStyle: 'italic',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    volunteerWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Volunteer = ({ volunteer: volunteers }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return volunteers?.length > 0 && (\r\n        <div className={classes.resumeVolunteer}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'volunteers' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.volunteers}>\r\n                    {volunteers.map((volunteer) => {\r\n                        if (volunteer) {\r\n                            const {\r\n                                organization,\r\n                                position,\r\n                                url,\r\n                                startDate,\r\n                                endDate,\r\n                                summary,\r\n                                highlights,\r\n                            } = volunteer || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.volunteerWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.position}>\r\n                                        {position}\r\n                                        {(position && organization) && ` ${intl.formatMessage({ id: 'at' })} `}\r\n                                        {organization}\r\n                                        {(startDate || endDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {' ('}\r\n                                                {startDate}\r\n                                                {(startDate && endDate) && ' - '}\r\n                                                {endDate}\r\n                                                {')'}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    <p className={classes.url}>\r\n                                        {url && <a href={url}>{url}</a>}\r\n                                    </p>\r\n                                    <p className={classes.summary}>\r\n                                        {summary}\r\n                                    </p>\r\n                                    {highlights?.length > 0 && (\r\n                                        <ul className={classes.highlights}>\r\n                                            {highlights?.map((highlight) =>\r\n                                                highlight && (\r\n                                                    <li key={uuid()}>\r\n                                                        {highlight}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Volunteer;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeWork: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    works: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    position: {\r\n        fontWeight: 'bold',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    urlAndLocation: {\r\n        fontStyle: 'italic',\r\n        color: theme.palette.type === 'dark' ? '#b7bfc1' : '#6a5e5e',\r\n    },\r\n    summary: {\r\n        whiteSpace: 'break-spaces',\r\n        marginBottom: '5px !important',\r\n    },\r\n    description: {\r\n        whiteSpace: 'break-spaces',\r\n    },\r\n    highlights: {\r\n        '& li': {\r\n            marginBottom: '1px',\r\n            fontStyle: 'italic',\r\n        },\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    workWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    workHeader: {\r\n        marginBottom: '5px',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Work = ({ work: works }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return works?.length > 0 && (\r\n        <div className={classes.resumeWork}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'experience' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.works}>\r\n                    {works.map((work) => {\r\n                        if (work) {\r\n                            const {\r\n                                name,\r\n                                location,\r\n                                description,\r\n                                position,\r\n                                url,\r\n                                startDate,\r\n                                endDate,\r\n                                summary,\r\n                                highlights,\r\n                                keywords,\r\n                            } = work || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.workWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <div className={classes.workHeader}>\r\n                                        <p className={classes.position}>\r\n                                            {position}\r\n                                            {(position && name) && ` ${intl.formatMessage({ id: 'at' })} `}\r\n                                            {name}\r\n                                            {(startDate || endDate) && (\r\n                                                <span className={classes.positionDate}>\r\n                                                    {' ('}\r\n                                                    {startDate}\r\n                                                    {(startDate && endDate) && ' - '}\r\n                                                    {endDate}\r\n                                                    {')'}\r\n                                                </span>\r\n                                            )}\r\n                                        </p>\r\n                                        <p className={classes.urlAndLocation}>\r\n                                            {location}\r\n                                            {(location && url) && ', '}\r\n                                            {url && (\r\n                                                <a href={url}>\r\n                                                    {url}\r\n                                                </a>\r\n                                            )}\r\n                                        </p>\r\n                                    </div>\r\n                                    <p className={classes.summary}>\r\n                                        {summary}\r\n                                    </p>\r\n                                    <p className={classes.description}>\r\n                                        {description}\r\n                                    </p>\r\n                                    {highlights?.length > 0 && (\r\n                                        <ul className={classes.highlights}>\r\n                                            {highlights?.map((highlight) =>\r\n                                                highlight && (\r\n                                                    <li key={uuid()}>\r\n                                                        {highlight}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Work;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeProjects: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    projects: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    project: {\r\n        fontWeight: 'bold',\r\n    },\r\n    highlights: {\r\n        '& li': {\r\n            marginBottom: '1px',\r\n            fontStyle: 'italic',\r\n        },\r\n    },\r\n    keywords: {\r\n        flexWrap: 'wrap',\r\n        listStyle: 'none',\r\n        paddingLeft: 0,\r\n        display: 'inline-flex',\r\n        '& li': {\r\n            fontStyle: 'italic',\r\n            margin: '3px 3px 0 0',\r\n            backgroundColor: theme.palette.type === 'dark' ? '#28407b' : '#dae4f4',\r\n            borderRadius: '3px',\r\n            padding: '1px 3px',\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    projectWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Projects = ({ projects }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return projects?.length > 0 && (\r\n        <div className={classes.resumeProjects}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'projects' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.projects}>\r\n                    {projects.map((project) => {\r\n                        if (project) {\r\n                            const {\r\n                                name,\r\n                                description,\r\n                                highlights,\r\n                                keywords,\r\n                                startDate,\r\n                                endDate,\r\n                                url,\r\n                                roles,\r\n                                entity,\r\n                                type,\r\n                            } = project || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.projectWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.project}>\r\n                                        {name}\r\n                                        {(startDate || endDate) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {' ('}\r\n                                                {startDate}\r\n                                                {(startDate && endDate) && ' - '}\r\n                                                {endDate}\r\n                                                {')'}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    {type && <p>{type}</p>}\r\n                                    {entity && <p>{entity}</p>}\r\n                                    {url && <a href={url}>{url}</a>}\r\n                                    {description && <p>{description}</p>}\r\n                                    {highlights?.length > 0 && (\r\n                                        <ul className={classes.highlights}>\r\n                                            {highlights?.map((highlight) =>\r\n                                                highlight && (\r\n                                                    <li key={uuid()}>\r\n                                                        {highlight}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                    {keywords?.length > 0 && (\r\n                                        <ul className={classes.keywords}>\r\n                                            {keywords?.map((keyword) =>\r\n                                                keyword && (\r\n                                                    <li key={uuid()}>\r\n                                                        {keyword}\r\n                                                    </li>\r\n                                                ))}\r\n                                        </ul>\r\n                                    )}\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { Fragment, useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\nimport Mustache from 'mustache';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    contentWrapper: {\r\n        whiteSpace: 'break-spaces',\r\n        marginBottom: '40px',\r\n        '@media print': {\r\n            clear: 'both',\r\n            pageBreakAfter: 'always',\r\n            breakAfter: 'page',\r\n            minHeight: '29.7cm',\r\n            marginBottom: 0,\r\n        },\r\n    },\r\n    variable: {\r\n        backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#cccccc',\r\n        padding: '0 2px',\r\n        '@media print': {\r\n            backgroundColor: 'unset',\r\n            padding: 0,\r\n        },\r\n    },\r\n    pageBreakWarning: {\r\n        height: '35px',\r\n        padding: 0,\r\n        marginLeft: '-42px',\r\n        width: '112%',\r\n        textAlign: 'center',\r\n        fontStyle: 'italic',\r\n        color: theme.palette.type === 'dark' ? '#6b6b6b' : '#b1afaf',\r\n        backgroundColor: theme.palette.type === 'dark' ? '#303030' : '#fafafa',\r\n        paddingTop: '5px',\r\n        '@media print': {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nconst CoverLetter = ({\r\n    coverLetterText = '',\r\n    coverLetterVariables = {},\r\n    showPageBreak = true,\r\n}) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const variables = useMemo(() => {\r\n        const newVariables = {};\r\n        Object.entries(coverLetterVariables)\r\n            .forEach((entry) => {\r\n                const [key, value] = entry;\r\n                newVariables[key] = renderToString(\r\n                    <span className={classes.variable}>\r\n                        {value}\r\n                    </span>\r\n                );\r\n            });\r\n\r\n        return newVariables;\r\n    }, [classes.variable, coverLetterVariables]);\r\n\r\n    const text = useMemo(\r\n        () => coverLetterText.replaceAll('{{', '{{{').replaceAll('}}', '}}}'),\r\n        [coverLetterText]\r\n    );\r\n\r\n    return (\r\n        <Fragment>\r\n            <div\r\n                className={classes.contentWrapper}\r\n                dangerouslySetInnerHTML={{\r\n                    __html: Mustache.render(text, variables),\r\n                }}\r\n            />\r\n            {showPageBreak && (\r\n                <div className={classes.pageBreakWarning}>\r\n                    {intl.formatMessage({ id: 'this_is_a_page_break' })}\r\n                </div>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default CoverLetter;\r\n","import React, { useRef } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Hooks\r\nimport useAntiPageBreakTitle from '../../../hooks/useAntiPageBreakTitle';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeCertificates: {\r\n        padding: '10px 0',\r\n        borderBottom: '1px solid #ddd',\r\n    },\r\n    award: { fontWeight: 'bold' },\r\n    certificates: {\r\n        margin: '0',\r\n        padding: '0',\r\n        listStyle: 'none',\r\n        '& li': {\r\n            margin: '0 0 10px 0',\r\n            '&:last-child': {\r\n                margin: '3px 0 0',\r\n            },\r\n        },\r\n    },\r\n    contentWrapper: {\r\n        marginLeft: '4px',\r\n    },\r\n    awardWrapper: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n    positionDate: {\r\n        fontStyle: 'italic',\r\n        fontSize: '0.8rem',\r\n    },\r\n    title: {\r\n        pageBreakInside: 'avoid',\r\n    },\r\n}));\r\n\r\nconst Certificates = ({ certificates }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n    const firstItem = useRef(null);\r\n    const sectionTitle = useRef(null);\r\n    const titleStyle = useAntiPageBreakTitle(sectionTitle, firstItem);\r\n\r\n    return certificates?.length > 0 && (\r\n        <div className={classes.resumeCertificates}>\r\n            <h3\r\n                ref={sectionTitle}\r\n                className={classes.title}\r\n                style={titleStyle}\r\n            >\r\n                {intl.formatMessage({ id: 'certificates' })}\r\n            </h3>\r\n            <div className={classes.contentWrapper}>\r\n                <ul className={classes.certificates}>\r\n                    {certificates.map((award) => {\r\n                        if (award) {\r\n                            const {\r\n                                name,\r\n                                date,\r\n                                url,\r\n                                issuer,\r\n                            } = award || {};\r\n\r\n                            let refProps = {};\r\n                            if (!firstItem.current) {\r\n                                refProps = {\r\n                                    ref: firstItem,\r\n                                };\r\n                            }\r\n\r\n                            return (\r\n                                <li\r\n                                    className={classes.awardWrapper}\r\n                                    key={uuid()}\r\n                                    // eslint-disable-next-line react/jsx-props-no-spreading\r\n                                    {...refProps}\r\n                                >\r\n                                    <p className={classes.award}>\r\n                                        {name}\r\n                                        {(date) && (\r\n                                            <span className={classes.positionDate}>\r\n                                                {` (${date})`}\r\n                                            </span>\r\n                                        )}\r\n                                    </p>\r\n                                    {url && <a href={url}>{url}</a>}\r\n                                    <p>{issuer}</p>\r\n                                </li>\r\n                            );\r\n                        }\r\n\r\n                        return null;\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Certificates;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useIntl } from 'gatsby-plugin-intl';\r\n\r\n// Components\r\nimport DownloadJsonLink from '../../../DownloadJsonLink';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeDownload: {},\r\n}));\r\n\r\nconst Download = ({ jsonResume }) => {\r\n    const classes = useStyles();\r\n    const intl = useIntl();\r\n\r\n    return (\r\n        <div className={classes.resumeDownload}>\r\n            {intl.formatMessage({\r\n                id: 'download_data',\r\n            },\r\n            {\r\n                // eslint-disable-next-line react/display-name\r\n                a: (msg) => (\r\n                    <DownloadJsonLink\r\n                        json={jsonResume}\r\n                        name={`jsonResume-${Date.now()}.json`}\r\n                    >\r\n                        {msg}\r\n                    </DownloadJsonLink>\r\n                ),\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Download;\r\n","import React, { useMemo } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { createIntl, createIntlCache, RawIntlProvider, useIntl } from 'gatsby-plugin-intl';\r\n\r\n// local template translations\r\nimport templateIntls from './intl';\r\n\r\n// Components\r\nimport Basics from './Sections/Basics';\r\nimport Awards from './Sections/Awards';\r\nimport Education from './Sections/Education';\r\nimport Interests from './Sections/Interests';\r\nimport Languages from './Sections/Languages';\r\nimport Publications from './Sections/Publications';\r\nimport References from './Sections/References';\r\nimport Skills from './Sections/Skills';\r\nimport Volunteer from './Sections/Volunteer';\r\nimport Work from './Sections/Work';\r\nimport Projects from './Sections/Projects';\r\nimport CoverLetter from './Sections/CoverLetter';\r\nimport Certificates from './Sections/Certificates';\r\nimport Download from './Sections/Download';\r\n\r\n// Utils\r\nimport { isObjectNotEmpty } from '../../../utils/utils';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    resumeDefaultTemplate: {\r\n        padding: '40px',\r\n        '& h3': { margin: '0' },\r\n        color: theme.palette.text.primary,\r\n        '& a': {\r\n            color: '#8da4f7',\r\n        },\r\n        '& a:visited': {\r\n            color: '#48578a',\r\n        },\r\n        '& p': {\r\n            margin: 0,\r\n            marginBlockStart: 0,\r\n            marginBlockEnd: 0,\r\n        },\r\n        '@media print': {\r\n            padding: 0,\r\n        },\r\n    },\r\n}));\r\n\r\nconst Default = ({\r\n    customTranslations = {},\r\n    isPrinting = false,\r\n    isOnlineViewer = false,\r\n    coverLetterVariables = [],\r\n    jsonResume,\r\n    jsonResume: {\r\n        basics,\r\n        work,\r\n        skills,\r\n        education,\r\n        awards,\r\n        volunteer,\r\n        publications,\r\n        languages,\r\n        interests,\r\n        references,\r\n        projects,\r\n        certificates,\r\n        // custom attributes\r\n        coverLetter,\r\n        enableSourceDataDownload = false,\r\n    },\r\n}) => {\r\n    const intl = useIntl();\r\n    const classes = useStyles();\r\n    const templateIntl = useMemo(() => {\r\n        let newIntl = templateIntls.find(\r\n            (tempIntl) => tempIntl.locale === intl.locale\r\n        );\r\n\r\n        if (!newIntl) {\r\n            newIntl = templateIntls.find(\r\n                (tempIntl) => tempIntl.locale === intl.defaultLocale\r\n            );\r\n        }\r\n\r\n        if (isObjectNotEmpty(customTranslations)) {\r\n            return createIntl({\r\n                locale: newIntl.locale,\r\n                messages: {\r\n                    ...newIntl.messages,\r\n                    ...customTranslations,\r\n                },\r\n            }, createIntlCache());\r\n        }\r\n\r\n        return newIntl;\r\n    }, [customTranslations, intl.defaultLocale, intl.locale]);\r\n\r\n    const showCoverLetterPageBreak = useMemo(\r\n        () => isObjectNotEmpty(basics)\r\n        && work?.length\r\n        && skills?.length\r\n        && education?.length\r\n        && awards?.length\r\n        && volunteer?.length\r\n        && publications?.length\r\n        && languages?.length\r\n        && interests?.length\r\n        && references?.length\r\n        && projects?.length\r\n        && certificates?.length,\r\n        [\r\n            basics,\r\n            work,\r\n            skills,\r\n            education,\r\n            awards,\r\n            volunteer,\r\n            publications,\r\n            languages,\r\n            interests,\r\n            references,\r\n            projects,\r\n            certificates,\r\n        ]\r\n    );\r\n\r\n    return (\r\n        <RawIntlProvider\r\n            value={templateIntl}\r\n        >\r\n            <div className={classes.resumeDefaultTemplate}>\r\n                {coverLetter && (\r\n                    <CoverLetter\r\n                        showPageBreak={showCoverLetterPageBreak}\r\n                        coverLetterText={coverLetter}\r\n                        coverLetterVariables={coverLetterVariables}\r\n                    />\r\n                )}\r\n                {enableSourceDataDownload && (\r\n                    <Download jsonResume={jsonResume} />\r\n                )}\r\n                {isObjectNotEmpty(basics) && (\r\n                    <Basics\r\n                        basics={basics}\r\n                    />\r\n                )}\r\n                {(skills?.length > 0) && (\r\n                    <Skills\r\n                        skills={skills}\r\n                    />\r\n                )}\r\n                {(work?.length > 0) && (\r\n                    <Work\r\n                        work={work}\r\n                    />\r\n                )}\r\n                {(education?.length > 0) && (\r\n                    <Education\r\n                        education={education}\r\n                    />\r\n                )}\r\n                {(awards?.length > 0) && (\r\n                    <Awards\r\n                        awards={awards}\r\n                    />\r\n                )}\r\n                {(certificates?.length > 0) && (\r\n                    <Certificates\r\n                        certificates={certificates}\r\n                    />\r\n                )}\r\n                {(volunteer?.length > 0) && (\r\n                    <Volunteer\r\n                        volunteer={volunteer}\r\n                    />\r\n                )}\r\n                {(publications?.length > 0) && (\r\n                    <Publications\r\n                        publications={publications}\r\n                    />\r\n                )}\r\n                {(projects?.length > 0) && (\r\n                    <Projects\r\n                        projects={projects}\r\n                    />\r\n                )}\r\n                {(languages?.length > 0) && (\r\n                    <Languages\r\n                        languages={languages}\r\n                    />\r\n                )}\r\n                {(interests?.length > 0) && (\r\n                    <Interests\r\n                        interests={interests}\r\n                    />\r\n                )}\r\n                {(references?.length > 0) && (\r\n                    <References\r\n                        references={references}\r\n                    />\r\n                )}\r\n            </div>\r\n        </RawIntlProvider>\r\n    );\r\n};\r\n\r\nexport default Default;\r\n","import { useEffect, useState } from 'react';\r\n\r\nexport default (sectionTitle, firstItem) => {\r\n    const [titleStyle, setTitleStyle] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (sectionTitle.current && firstItem.current) {\r\n            setTitleStyle({\r\n                height: sectionTitle.current.clientHeight + firstItem.current.clientHeight,\r\n                marginBottom: -firstItem.current.clientHeight,\r\n            });\r\n        }\r\n    }, [firstItem, sectionTitle]);\r\n\r\n    return titleStyle;\r\n};\r\n"],"sourceRoot":""}